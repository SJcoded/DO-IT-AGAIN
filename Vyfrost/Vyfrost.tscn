[gd_scene load_steps=11 format=2]

[ext_resource path="res://Vyfrost/Vyfrost.tres" type="DynamicFont" id=1]
[ext_resource path="res://Vyfrost/Sprites/Vyfrost-Sheet.png" type="Texture" id=2]
[ext_resource path="res://Vyfrost/Vyfrost.gd" type="Script" id=3]
[ext_resource path="res://Vyfrost/Music/Text-glitch.wav" type="AudioStream" id=4]
[ext_resource path="res://Vyfrost/Music/Screen-glitch.wav" type="AudioStream" id=5]

[sub_resource type="Animation" id=1]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 8 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("VBoxContainer/Label:visible_characters")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:material:shader_param/pixel")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:material:shader_param/red_offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:material:shader_param/green_offset")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Sprite:material:shader_param/blue_offset")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Sprite:material:shader_param/rand_strength")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Sprite:material:shader_param/alpha")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("Sprite:material:shader_param/affected")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Plane( 0.1, 0.1, 2, 2 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("VBoxContainer/Label:material:shader_param/pixel")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("VBoxContainer/Label:material:shader_param/red_offset")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/11/type = "value"
tracks/11/path = NodePath("VBoxContainer/Label:material:shader_param/green_offset")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/12/type = "value"
tracks/12/path = NodePath("VBoxContainer/Label:material:shader_param/blue_offset")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/13/type = "value"
tracks/13/path = NodePath("VBoxContainer/Label:material:shader_param/alpha")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/14/type = "value"
tracks/14/path = NodePath("VBoxContainer/Label:material:shader_param/rand_strength")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/15/type = "value"
tracks/15/path = NodePath("VBoxContainer/Label:material:shader_param/affected")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Plane( 0, 0, 1, 1 ) ]
}
tracks/16/type = "value"
tracks/16/path = NodePath("../AudioStreamPlayer:stream")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 4 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "glitch-in-vyfrost"
length = 3.0
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("VBoxContainer/Label:visible_characters")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5, 1.55, 1.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:material:shader_param/pixel")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 2, 2.05 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 1.0, 2.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:material:shader_param/red_offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:material:shader_param/green_offset")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 2, 2.05 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ Vector2( 0, 0 ), Vector2( 4, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Sprite:material:shader_param/blue_offset")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 2, 2.05 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 2, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Sprite:material:shader_param/rand_strength")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 2, 2.05 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 2.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Sprite:material:shader_param/alpha")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 2, 2.05 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("Sprite:material:shader_param/affected")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 2, 2.05 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Plane( 0, 0, 1, 1 ), Plane( 0.1, 0.1, 1, 1 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("VBoxContainer/Label:material:shader_param/pixel")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("VBoxContainer/Label:material:shader_param/red_offset")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/11/type = "value"
tracks/11/path = NodePath("VBoxContainer/Label:material:shader_param/green_offset")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/12/type = "value"
tracks/12/path = NodePath("VBoxContainer/Label:material:shader_param/blue_offset")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/13/type = "value"
tracks/13/path = NodePath("VBoxContainer/Label:material:shader_param/alpha")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/14/type = "value"
tracks/14/path = NodePath("VBoxContainer/Label:material:shader_param/rand_strength")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/15/type = "value"
tracks/15/path = NodePath("VBoxContainer/Label:material:shader_param/affected")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Plane( 0, 0, 1, 1 ) ]
}
tracks/16/type = "audio"
tracks/16/path = NodePath("../AudioStreamPlayer")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/keys = {
"clips": [ {
"end_offset": 1.10724,
"start_offset": 0.0,
"stream": ExtResource( 5 )
}, {
"end_offset": 0.808317,
"start_offset": 0.0,
"stream": ExtResource( 4 )
} ],
"times": PoolRealArray( -0.05, 1.1 )
}

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float pixel = 1.0;
uniform vec2 red_offset = vec2(0.0, 0.0);
uniform vec2 green_offset = vec2(0.0, 0.0);
uniform vec2 blue_offset = vec2(0.0, 0.0);
uniform float alpha = 1.0;
uniform float rand_strength = 1.0;

uniform vec4 affected = vec4(0.0, 0.0, 1.0, 1.0);

float Hash21(vec2 p) {
	p = fract(p*vec2(123.34, 456.21));
	p += dot(p, p+45.32);
	
	return fract(p.x*p.y);
}

vec2 pixelize(vec2 uv) {
	float mult = 5000.0 / (pixel * pixel);
	uv.x = floor(uv.x * mult) / mult;
	uv.y = floor(uv.y * mult) / mult;
	return uv;
}

vec4 chroma(vec2 uv, sampler2D tex) {
	vec4 col = texture(tex, uv);
	if (abs(red_offset.x) + abs(red_offset.y) > 0.001) {
		col.r = texture(tex, vec2(uv.x + red_offset.x, uv.y + red_offset.y)).r;
	}
	if (abs(green_offset.x) + abs(green_offset.y) > 0.001) {
		col.g = texture(tex, vec2(uv.x + green_offset.x, uv.y + green_offset.y)).g;	
	}
	if (abs(blue_offset.x) + abs(blue_offset.y) > 0.001) {
		col.b = texture(tex, vec2(uv.x + blue_offset.x, uv.y + blue_offset.y)).b;
	}
	
	return col;
}

void fragment() {
	vec2 normal_uv = UV;
	vec4 normal_col = texture(TEXTURE, UV);
    if (normal_uv.x < affected.x || normal_uv.y < affected.y || normal_uv.x > affected.x + affected.z || normal_uv.y > affected.y + affected.a) {
		COLOR = normal_col;
	}
	else {
		vec2 uv = pixelize(UV);
		vec4 col = chroma(uv, TEXTURE);
		col.a = col.a * alpha;
		vec2 id = floor(uv * 10.0);
		float alpha_rand = Hash21(id + floor(TIME*10.0));
		col = col * ( alpha_rand + (rand_strength * (1.0-alpha_rand)) );
		COLOR = col;
	}
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/pixel = 1.0
shader_param/red_offset = Vector2( 0, 0 )
shader_param/green_offset = Vector2( 0, 0 )
shader_param/blue_offset = Vector2( 0, 0 )
shader_param/alpha = 1.0
shader_param/rand_strength = 1.0
shader_param/affected = Plane( 0.1, 0.1, 1, 1 )

[sub_resource type="World" id=5]

[node name="CanvasLayer" type="CanvasLayer"]
script = ExtResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Splash")
anims/RESET = SubResource( 1 )
anims/glitch-in-vyfrost = SubResource( 2 )

[node name="ViewportContainer" type="ViewportContainer" parent="."]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 320, 180 )
world = SubResource( 5 )
handle_input_locally = false
render_target_update_mode = 3

[node name="Splash" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="Sprite" type="Sprite" parent="Splash"]
position = Vector2( 161, 81 )
texture = ExtResource( 2 )
hframes = 9
frame = 8

[node name="VBoxContainer" type="VBoxContainer" parent="Splash"]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -81.0

[node name="Label" type="Label" parent="Splash/VBoxContainer"]
margin_top = 35.0
margin_right = 320.0
margin_bottom = 45.0
size_flags_vertical = 6
custom_colors/font_color = Color( 0.788235, 0.901961, 1, 1 )
custom_fonts/font = ExtResource( 1 )
text = "Vyfrost games"
align = 1
percent_visible = 0.0

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 4 )
